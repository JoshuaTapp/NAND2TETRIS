// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
        Not(in=address[14], out=notAddr);       //  test if address is in RAM16k
        And(a=notAddr, b=load, out=memLoad);    //  address space and that load = true

        And(a=address[14], b=load, out=screenLoad); // test if in screen memory map and load = true

        // Components that make up memory chip.
        // memory address are in order of appearance.
        // Ram16k: 0-16383, Screen: 16384-24575, Keyboard: 24576
        RAM16K(in=in, load=memLoad, address=address[0..13], out=memOut);
        Screen(in=in, load=screenLoad, address=address[0..12], out=screenOut);
        Keyboard(out=keyOut);


        // Select data out based on address input.
        Mux4Way16(a=memOut, b=memOut, c=screenOut, d=keyOut, sel=address[13..14], out=out);

}